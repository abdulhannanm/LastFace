from flask import Flask, sessions, redirect, url_for, render_template, requestfrom flask_mysqldb import MySQLimport cv2import numpy as npimport face_recognition as frimport os.pathfrom passlib.hash import sha256_cryptapp = Flask(__name__)app.secret_key = 'CODER BOI HOURS'app.config['MYSQL_HOST'] = 'localhost'app.config['MYSQL_USER'] = 'root'app.config['MYSQL_PASSWORD'] = 'ffrn1234'app.config['MYSQL_DB'] = 'passworddb'app.config['MYSQL_CURSORCLASS'] = 'DictCursor'mysql = MySQL(app)user = 'Abdulhannan'webname = 'Yahoo.com'password = 'ffrn1234'@app.route('/', methods = ["GET", 'POST'])def index():    if request.method == "POST":        if request.form.get("facescan"):            final_user_recog = 0            final_user_unknown = 0            recognized_counter = 0            false_recognition_counter = 0            cap = cv2.VideoCapture(0)            TOLERANCE = 0.5            my_image = fr.load_image_file('father.png')            my_image_encoding = fr.face_encodings(my_image)[0]            known_face_encodings = [my_image_encoding]            known_face_names = ["AbdulRazzak"]            try:                while True:                    ret, frame = cap.read()                    rgb_frame = frame[:, :, ::-1]                    face_locations = fr.face_locations(rgb_frame)                    face_encoding = fr.face_encodings(rgb_frame, face_locations)                    for (top, right, bottom, left), face_encoding in zip(face_locations, face_encoding):                        matches = fr.compare_faces(known_face_encodings, face_encoding, TOLERANCE)                        name = "Unknown"                        face_distances = fr.face_distance(known_face_encodings, face_encoding)                        best_match_index = np.argmin(face_distances)                        if matches[best_match_index]:                            name = known_face_names[best_match_index]                            print("Face Recognized")                            recognized_counter += 1                            print("Recognized Counter:", recognized_counter)                        else:                            print("Face Not Recognized")                            false_recognition_counter += 1                            print("Unidentified Counter:", false_recognition_counter)                            print("Try Different Lighting")                        cv2.rectangle(frame, (left, top), (right, bottom), (0, 0, 255), 2)                        cv2.rectangle(frame, (left, bottom - 35), (right, bottom), (0, 0, 255), cv2.FILLED)                        font = cv2.FONT_HERSHEY_SIMPLEX                        cv2.putText(frame, name, (left + 6, bottom - 6), font, 1.0, (255, 255, 255), 1)                        if recognized_counter == 5:                            print("Login Successful, Welcome", known_face_names[0])                            final_user_recog += 1                            cv2.destroyAllWindows()                            cap.release()                        if false_recognition_counter == 2:                            print("Face Not In Database")                            final_user_unknown += 1                            cv2.destroyAllWindows()                            cap.release()                    cv2.imshow("Webcam", frame)            except Exception:                pass            if final_user_recog == 1:                return redirect(url_for('user'))            elif final_user_unknown == 1:                return redirect(url_for('unknown'))    return render_template('index.html')@app.route('/user')def user():    return render_template('recognized.html')@app.route("/unknown")def unknown():    try:        return render_template('unknown.html')    except:        pass    return render_template('unknown.html')if __name__ == '__main__':    app.run(debug=True)